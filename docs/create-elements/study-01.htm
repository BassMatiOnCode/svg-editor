 <!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2024-09-15" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2025-02-03" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2025-02-03" />
<meta name="version" content="1" />
<meta name="sectionTitle" content="../title.svg" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="all" />
<link rel="stylesheet" href="/inc/webcat/page-structure/demo-page.css" />
<script type="module" src="/inc/webcat/page-structure/demo-page.js" ></script>

<meta name="categories" content="Programming > Web Technologies" />
<meta name="tags" content="study, circular, context, menu, checkbox" />
<title>Circular Context Menu Study (Projects > SVG Editor > Context Menu)</title>
<meta name="description" content="Explores checkbox button functionality in circular context menus." />

</head><body>

<div class="hide-if-hosted">
<h1>Coordinate Transformation</h1>
<p class="subtitle">From HTML coordinates to SVG coordinates</p>
</div>

<!--
If you change the svg width and height attributes, the svg image is scaled, but the coordinate values remain the same.
If you scale the group element and retrieve the screen CTM from the SVG canvas (canvas.getScreenCTM( )), the coordinates are scaled also. So if you add a point to the SVG element, it will be show at the point you clicked at.
If you retrieve the CTM from the group element (theGroup.getScreenCTM( )), the coordinates are NOT scaled. If you then add a point to that group, the point will show up at the point where you clicked at.
-->

<style id="styleContextMenu">
div#canvasContainer { 
	border : 1px none silver ;
	width : 32px ;
	height : 32px ;
	overflow : visible ;
	}
#canvas {
	overflow : visible ;
	}
#canvas circle {
	stroke : black ;
	stroke-width : 4px ;
	fill : white ;
	}
#canvas g:not(.disabled) > circle:hover {
	stroke : darkorange ;
	}
#canvas g.active > circle {
	stroke : darkorange ;
	fill : #ffe9cf ;
	}
#canvas g.disabled > circle {
	stroke : silver ;
	}
#canvas text {
	font-family : "Segoe UI", Tahoma, Geneva, Verdana, sans-serif ;
	font-size : 60px ;
	dominant-baseline : central ;
	text-anchor : middle ;
	stroke : none ;
	fill : black ;
	pointer-events : none ;
	}
#canvas g.active > text {
	fill : darkorange ;
	}
#canvas g.disabled > text {
	fill : silver ;
	}
</style>

<div id="canvasContainer">
<svg id="canvas" viewBox="-50,-50,100,100" width="100" height="100">
	<g id="theGroup" stroke="silver" transform="scale(2)">
		<!--horizontal lines-->
		<line name="test" x1="-40" x2="40" y1="-40" y2="-40" /> 
		<line x1="-40" x2="40" y1="-30" y2="-30" /> 
		<line x1="-40" x2="40" y1="-20" y2="-20" /> 
		<line x1="-40" x2="40" y1="-10" y2="-10" /> 
		<line x1="-40" x2="40" y1="0" y2="0" /> 
		<line x1="-40" x2="40" y1="10" y2="10" /> 
		<line x1="-40" x2="40" y1="20" y2="20" /> 
		<line x1="-40" x2="40" y1="30" y2="30" /> 
		<line x1="-40" x2="40" y1="40" y2="40" /> 
		<!--vertical lines-->
		<line x1="-40" x2="-40" y1="-40" y2="40" /> 
		<line x1="-30" x2="-30" y1="-40" y2="40" /> 
		<line x1="-20" x2="-20" y1="-40" y2="40" /> 
		<line x1="-10" x2="-10" y1="-40" y2="40" /> 
		<line x1="0" x2="0" y1="-40" y2="40" /> 
		<line x1="10" x2="10" y1="-40" y2="40" /> 
		<line x1="20" x2="20" y1="-40" y2="40" /> 
		<line x1="30" x2="30" y1="-40" y2="40" /> 
		<line x1="40" x2="40" y1="-40" y2="40" /> 
		</g>
	</svg></div>

<script id="scriptContextMenu" type="module">
canvas.addEventListener( "click" , evt => {
	const pt = canvas.createSVGPoint( );
	pt.x = evt.clientX;
	pt.y = evt.clientY;
	const point = pt.matrixTransform( theGroup.getScreenCTM( ).inverse( ));
	console.debug( Math.round( evt.clientX ), Math.round( evt.clientY ), Math.round( point.x ), Math.round( point.y ));
	} ) ;

</script>

</body></html>